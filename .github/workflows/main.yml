name: CI Workflow

on:
  workflow_dispatch:
  push:

env:
  ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
  TB_HOST: https://api.tinybird.co
  USER_TOKEN: ${{ secrets.USER_TOKEN }}
  
jobs:
  run_validation_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          architecture: "x64"

      - name: Install Tinybird CLI
        run: pip install tinybird-cli

      - name: Tinybird version
        run: tb --version       

      - name: Check all the files
        run: tb check

      - name: Define workspace name
        run: echo "WORKSPACE_NAME=tmp_${GITHUB_RUN_ID}" >> $GITHUB_ENV

      - name: Create new workspace
        run: |
          tb \
          --host $TB_HOST \
          --token $ADMIN_TOKEN \
          workspace create ${{ env.WORKSPACE_NAME }} \
          --user_token $USER_TOKEN

      - name: Get admin token from new workspace
        run: echo "ADMIN_TOKEN=$(curl -s "${TB_HOST}/v0/user/workspaces?token=${USER_TOKEN}" | jq -rc '.workspaces[] | select(.role=="admin" and .name=="${{ env.WORKSPACE_NAME }}").token')" >> $GITHUB_ENV     

      - name: Create datasources
        run: |
          tb \
            --host $TB_HOST \
            --token ${{ env.ADMIN_TOKEN }} \
            push \
            --push-deps \
            --populate \
            --wait \
            --fixtures

      - name: Running tests
        run: ../scripts/exec_test.sh 
        env:
          TB_TOKEN: ${{ env.ADMIN_TOKEN }} 

      - name: Cleanup
        if: ${{ always() }}
        run: |
          tb \
          --host $TB_HOST \
          --token $ADMIN_TOKEN \
          workspace delete ${{ env.WORKSPACE_NAME }} \
          --user_token $USER_TOKEN \
          --yes
  